# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
   include:
     - master

variables:
  outputDirectory: '$(build.binariesDirectory)/$(buildConfiguration)'

jobs:
- job: Android
  pool:
    vmImage: 'windows-latest'
  steps:
  - checkout: self
  - task: NuGetToolInstaller@0
  - task: NuGetAuthenticate@0
  - task: NuGetCommand@2
    inputs:
      restoreSolution: '**/*Android.csproj'

  - task: DownloadSecureFile@1
    displayName: 'Download keystore file'
    name: keystore
    inputs:
      secureFile: '$(key-alias).keystore'

  - task: XamarinAndroid@1
    inputs:
      projectFile: '**/*Android.csproj'
      outputDirectory: '$(outputDirectory)'
      configuration: '$(buildConfiguration)'
      msbuildArguments: '-restore -t:SignAndroidPackage -p:AndroidPackageFormat=apk -p:AndroidKeyStore=True -p:AndroidSigningKeyStore=$(keystore.secureFilePath) -p:AndroidSigningStorePass=$(keystore-password) -p:AndroidSigningKeyAlias=$(key-alias) -p:AndroidSigningKeyPass=$(keystore-password) -p:BuildNumber=$(Build.BuildID) /p:AndroidNdkDirectory="C:\Microsoft\AndroidNDK64\android-ndk-r16b"'
      jdkOption: 'JDKVersion'

  # - task: AppCenterDistribute@3
  #   inputs:
  #     serverEndpoint: 'VSAC'
  #     appSlug: '$(vsac-org)/$(vsac-android)'
  #     appFile: '$(outputDirectory)/*-Signed.apk'
  #     symbolsOption: 'Android'
  #     symbolsMappingTxtFile: '$(outputDirectory)'
  #     releaseNotesOption: 'input'
  #     releaseNotesInput: 'New features'
  #     destinationType: 'groups'

- job: iOS
  pool:
    vmImage: 'macos-latest'
  variables:
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  steps:
  - checkout: self
  - script: |
      dotnet tool install --global boots
      boots https://download.visualstudio.microsoft.com/download/pr/fb168f8a-b44e-4582-8147-eefdf1562110/0a25988a5b9f502f4facd875c1b2072b/xamarin.ios-13.16.0.13.pkg

  - script: echo '##vso[task.setvariable variable=MD_APPLE_SDK_ROOT;]'/Applications/Xcode_11.4.1.app;sudo xcode-select --switch /Applications/Xcode_11.4.1.app/Contents/Developer
    displayName: 'Set xcode version'

  - task: UseDotNet@2
    displayName: 'Install .Net Core'
    inputs:
      packageType: 'sdk'
      version: '3.1.x'

  - task: NuGetToolInstaller@0
  - task: NuGetAuthenticate@0
  - task: NuGetCommand@2
    inputs:
      restoreSolution: '**/*.sln'

  - task: InstallAppleCertificate@2
    displayName: 'Install Apple Cert'
    inputs:
      certSecureFile: '$(ios-cert)'
      certPwd: '$(ios-cert-password)'
      keychain: 'temp'
      deleteCert: true

  - task: InstallAppleProvisioningProfile@1
    displayName: 'Install Provisioning Profile'
    inputs:
      provisioningProfileLocation: 'secureFiles'
      provProfileSecureFile: '$(ios-provisioning)'
      removeProfile: true

  - task: XamariniOS@2
    displayName: 'Build iOS'
    inputs:
      solutionFile: '**/*.sln'
      configuration: '$(buildConfiguration)'
      signingIdentity: '$(APPLE_CERTIFICATE_SIGNING_IDENTITY)'
      signingProvisioningProfileID: '$(APPLE_PROV_PROFILE_UUID)'
      args: '-p:BuildNumber=$(Build.BuildID) -p:Environment=$(Environment) /p:DefineConstants=$(Environment)'
      packageApp: true
      runNugetRestore: false

  # - task: AppCenterDistribute@3
  #   inputs:
  #     serverEndpoint: 'VSAC'
  #     appSlug: '$(vsac-org)/$(vsac-ios)'
  #     appFile: '**/*.ipa'
  #     symbolsDsymFiles: '**/*.dSYM'
  #     releaseNotesOption: 'input'
  #     releaseNotesInput: 'New Release'
  #     destinationType: 'groups'
